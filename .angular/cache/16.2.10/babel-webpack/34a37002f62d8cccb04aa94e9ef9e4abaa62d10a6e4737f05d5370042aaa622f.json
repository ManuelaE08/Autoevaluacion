{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LaborService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.apiUrl;\n    this.myApiUrl = '/labor/';\n    this.deleteLab = 'eliminar/';\n  }\n  getListLabores() {\n    //return this.http.get<Labor[]>(`${this.myAppUrl}${this.myApiUrl}`);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      return throwError('Token not provided!');\n    } else {\n      const headers = new HttpHeaders({\n        Authorization: token\n      });\n      return this.http.get(`${this.myAppUrl}${this.myApiUrl}`, {\n        headers\n      }).pipe(catchError(error => {\n        console.error('Error en la solicitud para agregar un ítem:', error);\n        return throwError('Error in token: ' + error.message);\n      }));\n    }\n  }\n  deleteLabor(id) {\n    console.log(`${this.myAppUrl}${this.myApiUrl}${this.deleteLab}${id}`);\n    return this.http.delete(`${this.myAppUrl}${this.myApiUrl}${this.deleteLab}${id}`);\n  }\n  saveLabor(labor) {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      return throwError('Token not provided!');\n    } else {\n      const headers = new HttpHeaders({\n        Authorization: token\n      });\n      return this.http.post(`${this.myAppUrl}${this.myApiUrl}agregar`, labor, {\n        headers\n      }).pipe(catchError(error => {\n        console.error('Error en la solicitud para agregar un ítem:', error);\n        return throwError('Error in token: ' + error.message);\n      }));\n    }\n  }\n  getLabor(id) {\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}id/${id}`);\n  }\n  updateLabor(labor) {\n    console.log('update', labor);\n    return this.http.put(`${this.myAppUrl}${this.myApiUrl}editar/${labor.id}`, labor);\n  }\n  static #_ = this.ɵfac = function LaborService_Factory(t) {\n    return new (t || LaborService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LaborService,\n    factory: LaborService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","environment","LaborService","constructor","http","myAppUrl","apiUrl","myApiUrl","deleteLab","getListLabores","token","localStorage","getItem","headers","Authorization","get","pipe","error","console","message","deleteLabor","id","log","delete","saveLabor","labor","post","getLabor","updateLabor","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\franc\\OneDrive\\Escritorio\\Nueva carpeta\\Autoevaluacion\\src\\app\\services\\labor.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, catchError, throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Labor } from '../interfaces/labor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LaborService {\r\n\r\n  private myAppUrl: string;\r\n  private myApiUrl: string;\r\n  private deleteLab: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.myAppUrl = environment.apiUrl;\r\n    this.myApiUrl = '/labor/';\r\n    this.deleteLab = 'eliminar/';\r\n   }\r\n\r\n   getListLabores(): Observable<Labor[]>{\r\n    //return this.http.get<Labor[]>(`${this.myAppUrl}${this.myApiUrl}`);\r\n\r\n    const token = localStorage.getItem('token');\r\n    if(!token){\r\n      return throwError('Token not provided!');\r\n    }else{\r\n      const headers = new HttpHeaders({ Authorization: token });\r\n      return this.http.get<Labor[]>(`${this.myAppUrl}${this.myApiUrl}`,{headers}).pipe(\r\n        catchError((error: any) => {\r\n          console.error('Error en la solicitud para agregar un ítem:', error);\r\n          return throwError('Error in token: ' + error.message);\r\n        })\r\n      );\r\n    }\r\n   }\r\n\r\n   deleteLabor(id: number): Observable<void>{\r\n    console.log(`${this.myAppUrl}${this.myApiUrl}${this.deleteLab}${id}`);\r\n    return this.http.delete<void>(`${this.myAppUrl}${this.myApiUrl}${this.deleteLab}${id}`);\r\n   }\r\n\r\n   saveLabor(labor: Labor): Observable<void>{\r\n    const token = localStorage.getItem('token');\r\n    if(!token){\r\n      return throwError('Token not provided!');\r\n    }else{\r\n      const headers = new HttpHeaders({ Authorization: token });\r\n      return this.http.post<void>(`${this.myAppUrl}${this.myApiUrl}agregar`,labor,{headers}).pipe(\r\n        catchError((error: any) => {\r\n          console.error('Error en la solicitud para agregar un ítem:', error);\r\n          return throwError('Error in token: ' + error.message);\r\n        })\r\n      );\r\n    }\r\n   }\r\n\r\n   getLabor(id:number): Observable<Labor>{\r\n    return this.http.get<Labor>(`${this.myAppUrl}${this.myApiUrl}id/${id}`);\r\n   }\r\n\r\n   updateLabor(labor:Labor): Observable<void>{\r\n    console.log('update',labor);\r\n    return this.http.put<void>(`${this.myAppUrl}${this.myApiUrl}editar/${labor.id}`,labor);\r\n   }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}