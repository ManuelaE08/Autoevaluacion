{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/labor.service\";\nimport * as i2 from \"src/app/services/item.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../navbar/navbar.component\";\nfunction AddItemUsuarioComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 5)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function AddItemUsuarioComponent_tr_16_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const labor_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.agregarItem(ctx_r2.id_usuario, labor_r1.id));\n    });\n    i0.ɵɵtext(9, \"Agregar Item\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const labor_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(labor_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(labor_r1.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(labor_r1.horas);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/autoevaluacion/item/\", ctx_r0.id_usuario, \"\");\n  }\n}\nexport class AddItemUsuarioComponent {\n  constructor(_laborService, _itemService, router, aRouter) {\n    this._laborService = _laborService;\n    this._itemService = _itemService;\n    this.router = router;\n    this.aRouter = aRouter;\n    this.listLabores = [];\n    this.id_usuario = Number(aRouter.snapshot.paramMap.get('id'));\n    console.log('id usuario para añadir item', this.id_usuario);\n  }\n  ngOnInit() {\n    this.getListLabores();\n  }\n  getListLabores() {\n    this._laborService.getListLabores().subscribe(data => {\n      this.listLabores = this.convertirLabores(data);\n    });\n  }\n  convertirLabores(labores) {\n    let resultado = [];\n    for (let labor of labores) {\n      resultado.push({\n        id: labor.atrLabID,\n        idTipoLabor: labor.atrTlID,\n        nombre: labor.atrLabNombre,\n        horas: labor.atrLabHoras\n      });\n    }\n    return resultado;\n  }\n  agregarItem(idUser, idLab) {\n    //Tenemos el id del usuario y el id de la labor\n    this._laborService.saveItem(idUser, idLab).subscribe(() => {\n      console.log('Item Agregado');\n    });\n  }\n  static #_ = this.ɵfac = function AddItemUsuarioComponent_Factory(t) {\n    return new (t || AddItemUsuarioComponent)(i0.ɵɵdirectiveInject(i1.LaborService), i0.ɵɵdirectiveInject(i2.ItemService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddItemUsuarioComponent,\n    selectors: [[\"app-add-item-usuario\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"table\", \"table-hover\"], [\"scope\", \"col\"], [\"scope\", \"\"], [\"class\", \"table-active\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-secondary\", 3, \"routerLink\"], [1, \"table-active\"], [\"type\", \"submit\", 3, \"routerLink\", \"click\"]],\n    template: function AddItemUsuarioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-navbar\");\n        i0.ɵɵelementStart(1, \"p\");\n        i0.ɵɵtext(2, \"AGREGAR NUEVA LABOR A USUARIO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\", 0)(4, \"thead\")(5, \"tr\")(6, \"th\", 1);\n        i0.ɵɵtext(7, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\", 1);\n        i0.ɵɵtext(9, \"Tipo Labor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\", 1);\n        i0.ɵɵtext(11, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\", 1);\n        i0.ɵɵtext(13, \"Cantidad Horas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"th\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"tbody\");\n        i0.ɵɵtemplate(16, AddItemUsuarioComponent_tr_16_Template, 10, 4, \"tr\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 4);\n        i0.ɵɵtext(18, \"Cancelar\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listLabores);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/autoevaluacion/item/\", ctx.id_usuario, \"\");\n      }\n    },\n    dependencies: [i4.NgForOf, i3.RouterLink, i5.NavbarComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddItemUsuarioComponent_tr_16_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r3","labor_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","agregarItem","id_usuario","id","ɵɵadvance","ɵɵtextInterpolate","nombre","horas","ɵɵpropertyInterpolate1","ctx_r0","AddItemUsuarioComponent","constructor","_laborService","_itemService","router","aRouter","listLabores","Number","snapshot","paramMap","get","console","log","ngOnInit","getListLabores","subscribe","data","convertirLabores","labores","resultado","labor","push","atrLabID","idTipoLabor","atrTlID","atrLabNombre","atrLabHoras","idUser","idLab","saveItem","_","ɵɵdirectiveInject","i1","LaborService","i2","ItemService","i3","Router","ActivatedRoute","_2","selectors","decls","vars","consts","template","AddItemUsuarioComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AddItemUsuarioComponent_tr_16_Template","ɵɵproperty"],"sources":["C:\\Users\\franc\\OneDrive\\Escritorio\\Nueva carpeta\\Autoevaluacion\\src\\app\\components\\add-item-usuario\\add-item-usuario.component.ts","C:\\Users\\franc\\OneDrive\\Escritorio\\Nueva carpeta\\Autoevaluacion\\src\\app\\components\\add-item-usuario\\add-item-usuario.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Labor } from 'src/app/interfaces/labor';\r\nimport { ItemService } from 'src/app/services/item.service';\r\nimport { LaborService } from 'src/app/services/labor.service';\r\n\r\n@Component({\r\n  selector: 'app-add-item-usuario',\r\n  templateUrl: './add-item-usuario.component.html',\r\n  styleUrls: ['./add-item-usuario.component.css']\r\n})\r\nexport class AddItemUsuarioComponent implements OnInit {\r\n  id_usuario: number;\r\n  listLabores: Labor[] = []\r\n  constructor(private _laborService: LaborService,\r\n    private _itemService: ItemService,\r\n    private router :Router,\r\n    private aRouter: ActivatedRoute\r\n    ){\r\n    this.id_usuario = Number(aRouter.snapshot.paramMap.get('id'));\r\n    console.log('id usuario para añadir item',this.id_usuario);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getListLabores();\r\n  }\r\n\r\n  getListLabores(){\r\n    this._laborService.getListLabores().subscribe((data: Labor[]) =>{\r\n      this.listLabores = this.convertirLabores(data);\r\n    })\r\n  }\r\n  convertirLabores(labores: any): Labor[]{\r\n    let resultado: Labor[] =[];\r\n    for(let labor of labores){\r\n      resultado.push({\r\n        id: labor.atrLabID,\r\n        idTipoLabor: labor.atrTlID,\r\n        nombre: labor.atrLabNombre,\r\n        horas: labor.atrLabHoras\r\n      });\r\n    }\r\n    return resultado;\r\n  }\r\n\r\n\r\n  agregarItem(idUser: number, idLab: number){\r\n    //Tenemos el id del usuario y el id de la labor\r\n    this._laborService.saveItem(idUser,idLab).subscribe(()=> {\r\n      console.log('Item Agregado');\r\n    });\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<p>AGREGAR NUEVA LABOR A USUARIO</p>\r\n\r\n<table class=\"table table-hover\">\r\n    <thead>\r\n    <tr>\r\n        <th scope=\"col\">Id</th>\r\n        <th scope=\"col\">Tipo Labor</th>\r\n        <th scope=\"col\">Nombre</th>\r\n        <th scope=\"col\">Cantidad Horas</th>\r\n        <th scope=\"\"></th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\" let labor of listLabores\" class=\"table-active\">\r\n        <td>{{labor.id}}</td>\r\n        <td>{{labor.nombre}}</td>\r\n        <td>{{labor.horas}}</td>\r\n        <td>\r\n            <button type=\"submit\" (click)=\"agregarItem(this.id_usuario!, labor.id!)\" routerLink=\"/autoevaluacion/item/{{this.id_usuario}}\" >Agregar Item</button>\r\n        </td>\r\n    </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<button routerLink=\"/autoevaluacion/item/{{this.id_usuario}}\" class=\"btn btn-secondary\">Cancelar</button>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}