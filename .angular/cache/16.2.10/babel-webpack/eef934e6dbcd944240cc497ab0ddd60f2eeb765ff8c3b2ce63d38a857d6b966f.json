{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LaborService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.apiUrl;\n    this.myApiUrl = '/labor/';\n    this.deleteLab = 'eliminar/';\n  }\n  getListLabores() {\n    console.log(`${this.myAppUrl}${this.myApiUrl}`);\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}`);\n  }\n  deleteLabor(id) {\n    console.log(`${this.myAppUrl}${this.myApiUrl}${this.deleteLab}${id}`);\n    return this.http.delete(`${this.myAppUrl}${this.myApiUrl}${this.deleteLab}${id}`);\n  }\n  saveLabor(labor) {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      return throwError('Token not provided!');\n    } else {\n      const headers = new HttpHeaders({\n        Authorization: token\n      });\n      return this.http.post(`${this.myAppUrl}${this.myApiUrl}agregar`, labor, {\n        headers\n      }).pipe(catchError(error => {\n        console.error('Error en la solicitud para agregar un ítem:', error);\n        return throwError('Error in token: ' + error.message);\n      }));\n    }\n  }\n  getLabor(id) {\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}id/${id}`);\n  }\n  static #_ = this.ɵfac = function LaborService_Factory(t) {\n    return new (t || LaborService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LaborService,\n    factory: LaborService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","environment","LaborService","constructor","http","myAppUrl","apiUrl","myApiUrl","deleteLab","getListLabores","console","log","get","deleteLabor","id","delete","saveLabor","labor","token","localStorage","getItem","headers","Authorization","post","pipe","error","message","getLabor","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\franc\\Downloads\\Apliacion-Wed-de-Autoevaluacion-main (3)\\Apliacion-Wed-de-Autoevaluacion-main\\src\\app\\services\\labor.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Labor } from '../interfaces/labor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LaborService {\n\n  private myAppUrl: string;\n  private myApiUrl: string;\n  private deleteLab: string;\n\n  constructor(private http: HttpClient) {\n    this.myAppUrl = environment.apiUrl;\n    this.myApiUrl = '/labor/';\n    this.deleteLab = 'eliminar/';\n   }\n\n   getListLabores(): Observable<Labor[]>{\n    console.log(`${this.myAppUrl}${this.myApiUrl}`);\n    return this.http.get<Labor[]>(`${this.myAppUrl}${this.myApiUrl}`);\n   }\n\n   deleteLabor(id: number): Observable<void>{\n    console.log(`${this.myAppUrl}${this.myApiUrl}${this.deleteLab}${id}`);\n    return this.http.delete<void>(`${this.myAppUrl}${this.myApiUrl}${this.deleteLab}${id}`);\n   }\n\n   saveLabor(labor: Labor): Observable<void>{\n    const token = localStorage.getItem('token');\n    if(!token){\n      return throwError('Token not provided!');\n    }else{\n      const headers = new HttpHeaders({ Authorization: token });\n      return this.http.post<void>(`${this.myAppUrl}${this.myApiUrl}agregar`,labor,{headers}).pipe(\n        catchError((error: any) => {\n          console.error('Error en la solicitud para agregar un ítem:', error);\n          return throwError('Error in token: ' + error.message);\n        })\n      );\n    }\n   }\n\n   getLabor(id:number): Observable<Labor>{\n    return this.http.get<Labor>(`${this.myAppUrl}${this.myApiUrl}id/${id}`);\n   }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAAqBC,UAAU,EAAEC,UAAU,QAAQ,MAAM;AACzD,SAASC,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,YAAY;EAMvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,QAAQ,GAAGJ,WAAW,CAACK,MAAM;IAClC,IAAI,CAACC,QAAQ,GAAG,SAAS;IACzB,IAAI,CAACC,SAAS,GAAG,WAAW;EAC7B;EAEAC,cAAcA,CAAA;IACbC,OAAO,CAACC,GAAG,CAAC,GAAG,IAAI,CAACN,QAAQ,GAAG,IAAI,CAACE,QAAQ,EAAE,CAAC;IAC/C,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAAU,GAAG,IAAI,CAACP,QAAQ,GAAG,IAAI,CAACE,QAAQ,EAAE,CAAC;EAClE;EAEAM,WAAWA,CAACC,EAAU;IACrBJ,OAAO,CAACC,GAAG,CAAC,GAAG,IAAI,CAACN,QAAQ,GAAG,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACC,SAAS,GAAGM,EAAE,EAAE,CAAC;IACrE,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,QAAQ,GAAG,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACC,SAAS,GAAGM,EAAE,EAAE,CAAC;EACxF;EAEAE,SAASA,CAACC,KAAY;IACrB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAG,CAACF,KAAK,EAAC;MACR,OAAOlB,UAAU,CAAC,qBAAqB,CAAC;KACzC,MAAI;MACH,MAAMqB,OAAO,GAAG,IAAIvB,WAAW,CAAC;QAAEwB,aAAa,EAAEJ;MAAK,CAAE,CAAC;MACzD,OAAO,IAAI,CAACd,IAAI,CAACmB,IAAI,CAAO,GAAG,IAAI,CAAClB,QAAQ,GAAG,IAAI,CAACE,QAAQ,SAAS,EAACU,KAAK,EAAC;QAACI;MAAO,CAAC,CAAC,CAACG,IAAI,CACzFzB,UAAU,CAAE0B,KAAU,IAAI;QACxBf,OAAO,CAACe,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;QACnE,OAAOzB,UAAU,CAAC,kBAAkB,GAAGyB,KAAK,CAACC,OAAO,CAAC;MACvD,CAAC,CAAC,CACH;;EAEJ;EAEAC,QAAQA,CAACb,EAAS;IACjB,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAQ,GAAG,IAAI,CAACP,QAAQ,GAAG,IAAI,CAACE,QAAQ,MAAMO,EAAE,EAAE,CAAC;EACxE;EAAC,QAAAc,CAAA,G;qBAvCS1B,YAAY,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZ/B,YAAY;IAAAgC,OAAA,EAAZhC,YAAY,CAAAiC,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}